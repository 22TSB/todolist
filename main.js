(()=>{var __webpack_modules__={790:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `article, aside, audio, command, datagrid, details, dialog, embed, \nfigcaption, figure, footer, header, hgroup, menu, nav, section, summary,\nvideo, wbr {\n\tdisplay: block;\n}\n\nbdi, figcaption, keygen, mark, meter, progress, rp, rt, ruby, time {\n\tdisplay: inline;\n}\n\n/* Deprecated tags */\nacronym, applet, big, center, dir, font, frame, frameset, noframes, s,\nstrike, tt, u, xmp {\n\tdisplay: none;\n}\n\n/* Reset styles for all structural tags */\na, abbr, area, article, aside, audio, b, bdo, blockquote, body, button, \ncanvas, caption, cite, code, col, colgroup, command, datalist, dd, del, \ndetails, dialog, dfn, div, dl, dt, em, embed, fieldset, figure, form,\nh1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html, i, iframe, img, \ninput, ins, keygen, kbd, label, legend, li, map, mark, menu, meter, nav,\nnoscript, object, ol, optgroup, option, output, p, param, pre, progress,\nq, rp, rt, ruby, samp, section, select, small, span, strong, sub, sup, \ntable, tbody, td, textarea, tfoot, th, thead, time, tr, ul, var, video {\n\tbackground: transparent;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tmargin: 0;\n\toutline: none;\n\tpadding: 0;\n\ttext-align: left;\n\ttext-decoration: none;\n\tvertical-align: baseline;\n\tz-index: 1;\n}\n\n/* Miscellaneous resets */\nbody {\n\tline-height: 1;\n}\n\nol, ul {\n\tlist-style: none;\n}\n\nblockquote, q {\n\tquotes: none;\n\n}\n\nblockquote:before, blockquote:after, q:before, q:after {\n\tcontent: \'\';\n\tcontent: none;\n}\n\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}`, "",{"version":3,"sources":["webpack://./src/css/reset.css"],"names":[],"mappings":"AAAA;;;CAGC,cAAc;AACf;;AAEA;CACC,eAAe;AAChB;;AAEA,oBAAoB;AACpB;;CAEC,aAAa;AACd;;AAEA,yCAAyC;AACzC;;;;;;;;CAQC,uBAAuB;CACvB,SAAS;CACT,eAAe;CACf,aAAa;CACb,SAAS;CACT,aAAa;CACb,UAAU;CACV,gBAAgB;CAChB,qBAAqB;CACrB,wBAAwB;CACxB,UAAU;AACX;;AAEA,yBAAyB;AACzB;CACC,cAAc;AACf;;AAEA;CACC,gBAAgB;AACjB;;AAEA;CACC,YAAY;;AAEb;;AAEA;CACC,WAAW;CACX,aAAa;AACd;;AAEA;CACC,yBAAyB;CACzB,iBAAiB;AAClB","sourcesContent":["article, aside, audio, command, datagrid, details, dialog, embed, \\nfigcaption, figure, footer, header, hgroup, menu, nav, section, summary,\\nvideo, wbr {\\n\\tdisplay: block;\\n}\\n\\nbdi, figcaption, keygen, mark, meter, progress, rp, rt, ruby, time {\\n\\tdisplay: inline;\\n}\\n\\n/* Deprecated tags */\\nacronym, applet, big, center, dir, font, frame, frameset, noframes, s,\\nstrike, tt, u, xmp {\\n\\tdisplay: none;\\n}\\n\\n/* Reset styles for all structural tags */\\na, abbr, area, article, aside, audio, b, bdo, blockquote, body, button, \\ncanvas, caption, cite, code, col, colgroup, command, datalist, dd, del, \\ndetails, dialog, dfn, div, dl, dt, em, embed, fieldset, figure, form,\\nh1, h2, h3, h4, h5, h6, head, header, hgroup, hr, html, i, iframe, img, \\ninput, ins, keygen, kbd, label, legend, li, map, mark, menu, meter, nav,\\nnoscript, object, ol, optgroup, option, output, p, param, pre, progress,\\nq, rp, rt, ruby, samp, section, select, small, span, strong, sub, sup, \\ntable, tbody, td, textarea, tfoot, th, thead, time, tr, ul, var, video {\\n\\tbackground: transparent;\\n\\tborder: 0;\\n\\tfont-size: 100%;\\n\\tfont: inherit;\\n\\tmargin: 0;\\n\\toutline: none;\\n\\tpadding: 0;\\n\\ttext-align: left;\\n\\ttext-decoration: none;\\n\\tvertical-align: baseline;\\n\\tz-index: 1;\\n}\\n\\n/* Miscellaneous resets */\\nbody {\\n\\tline-height: 1;\\n}\\n\\nol, ul {\\n\\tlist-style: none;\\n}\\n\\nblockquote, q {\\n\\tquotes: none;\\n\\n}\\n\\nblockquote:before, blockquote:after, q:before, q:after {\\n\\tcontent: \'\';\\n\\tcontent: none;\\n}\\n\\ntable {\\n\\tborder-collapse: collapse;\\n\\tborder-spacing: 0;\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUM2RztBQUNqQjtBQUM1Riw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxPQUFPLHNGQUFzRixVQUFVLE1BQU0sS0FBSyxVQUFVLE9BQU8sWUFBWSxPQUFPLFVBQVUsTUFBTSxZQUFZLGFBQWEsWUFBWSxXQUFXLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxZQUFZLGFBQWEsYUFBYSxXQUFXLE1BQU0sWUFBWSxNQUFNLFVBQVUsTUFBTSxLQUFLLFlBQVksT0FBTyxLQUFLLFdBQVcsTUFBTSxLQUFLLFVBQVUsVUFBVSxNQUFNLEtBQUssWUFBWSxhQUFhLG9MQUFvTCxtQkFBbUIsR0FBRyx3RUFBd0Usb0JBQW9CLEdBQUcsdUhBQXVILGtCQUFrQixHQUFHLDBuQkFBMG5CLDRCQUE0QixjQUFjLG9CQUFvQixrQkFBa0IsY0FBYyxrQkFBa0IsZUFBZSxxQkFBcUIsMEJBQTBCLDZCQUE2QixlQUFlLEdBQUcsc0NBQXNDLG1CQUFtQixHQUFHLFlBQVkscUJBQXFCLEdBQUcsbUJBQW1CLGlCQUFpQixLQUFLLDREQUE0RCxnQkFBZ0Isa0JBQWtCLEdBQUcsV0FBVyw4QkFBOEIsc0JBQXNCLEdBQUcsbUJBQW1CO0FBQ3hoRTtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvY3NzL3Jlc2V0LmNzcz9iMjQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBhcnRpY2xlLCBhc2lkZSwgYXVkaW8sIGNvbW1hbmQsIGRhdGFncmlkLCBkZXRhaWxzLCBkaWFsb2csIGVtYmVkLCBcbmZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5LFxudmlkZW8sIHdiciB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuXG5iZGksIGZpZ2NhcHRpb24sIGtleWdlbiwgbWFyaywgbWV0ZXIsIHByb2dyZXNzLCBycCwgcnQsIHJ1YnksIHRpbWUge1xuXHRkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi8qIERlcHJlY2F0ZWQgdGFncyAqL1xuYWNyb255bSwgYXBwbGV0LCBiaWcsIGNlbnRlciwgZGlyLCBmb250LCBmcmFtZSwgZnJhbWVzZXQsIG5vZnJhbWVzLCBzLFxuc3RyaWtlLCB0dCwgdSwgeG1wIHtcblx0ZGlzcGxheTogbm9uZTtcbn1cblxuLyogUmVzZXQgc3R5bGVzIGZvciBhbGwgc3RydWN0dXJhbCB0YWdzICovXG5hLCBhYmJyLCBhcmVhLCBhcnRpY2xlLCBhc2lkZSwgYXVkaW8sIGIsIGJkbywgYmxvY2txdW90ZSwgYm9keSwgYnV0dG9uLCBcbmNhbnZhcywgY2FwdGlvbiwgY2l0ZSwgY29kZSwgY29sLCBjb2xncm91cCwgY29tbWFuZCwgZGF0YWxpc3QsIGRkLCBkZWwsIFxuZGV0YWlscywgZGlhbG9nLCBkZm4sIGRpdiwgZGwsIGR0LCBlbSwgZW1iZWQsIGZpZWxkc2V0LCBmaWd1cmUsIGZvcm0sXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoZWFkLCBoZWFkZXIsIGhncm91cCwgaHIsIGh0bWwsIGksIGlmcmFtZSwgaW1nLCBcbmlucHV0LCBpbnMsIGtleWdlbiwga2JkLCBsYWJlbCwgbGVnZW5kLCBsaSwgbWFwLCBtYXJrLCBtZW51LCBtZXRlciwgbmF2LFxubm9zY3JpcHQsIG9iamVjdCwgb2wsIG9wdGdyb3VwLCBvcHRpb24sIG91dHB1dCwgcCwgcGFyYW0sIHByZSwgcHJvZ3Jlc3MsXG5xLCBycCwgcnQsIHJ1YnksIHNhbXAsIHNlY3Rpb24sIHNlbGVjdCwgc21hbGwsIHNwYW4sIHN0cm9uZywgc3ViLCBzdXAsIFxudGFibGUsIHRib2R5LCB0ZCwgdGV4dGFyZWEsIHRmb290LCB0aCwgdGhlYWQsIHRpbWUsIHRyLCB1bCwgdmFyLCB2aWRlbyB7XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXHRib3JkZXI6IDA7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0Zm9udDogaW5oZXJpdDtcblx0bWFyZ2luOiAwO1xuXHRvdXRsaW5lOiBub25lO1xuXHRwYWRkaW5nOiAwO1xuXHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcblx0ei1pbmRleDogMTtcbn1cblxuLyogTWlzY2VsbGFuZW91cyByZXNldHMgKi9cbmJvZHkge1xuXHRsaW5lLWhlaWdodDogMTtcbn1cblxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSwgcSB7XG5cdHF1b3Rlczogbm9uZTtcblxufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlciwgcTpiZWZvcmUsIHE6YWZ0ZXIge1xuXHRjb250ZW50OiAnJztcblx0Y29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXHRib3JkZXItc3BhY2luZzogMDtcbn1gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jc3MvcmVzZXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOzs7Q0FHQyxjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxlQUFlO0FBQ2hCOztBQUVBLG9CQUFvQjtBQUNwQjs7Q0FFQyxhQUFhO0FBQ2Q7O0FBRUEseUNBQXlDO0FBQ3pDOzs7Ozs7OztDQVFDLHVCQUF1QjtDQUN2QixTQUFTO0NBQ1QsZUFBZTtDQUNmLGFBQWE7Q0FDYixTQUFTO0NBQ1QsYUFBYTtDQUNiLFVBQVU7Q0FDVixnQkFBZ0I7Q0FDaEIscUJBQXFCO0NBQ3JCLHdCQUF3QjtDQUN4QixVQUFVO0FBQ1g7O0FBRUEseUJBQXlCO0FBQ3pCO0NBQ0MsY0FBYztBQUNmOztBQUVBO0NBQ0MsZ0JBQWdCO0FBQ2pCOztBQUVBO0NBQ0MsWUFBWTs7QUFFYjs7QUFFQTtDQUNDLFdBQVc7Q0FDWCxhQUFhO0FBQ2Q7O0FBRUE7Q0FDQyx5QkFBeUI7Q0FDekIsaUJBQWlCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImFydGljbGUsIGFzaWRlLCBhdWRpbywgY29tbWFuZCwgZGF0YWdyaWQsIGRldGFpbHMsIGRpYWxvZywgZW1iZWQsIFxcbmZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uLCBzdW1tYXJ5LFxcbnZpZGVvLCB3YnIge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG5iZGksIGZpZ2NhcHRpb24sIGtleWdlbiwgbWFyaywgbWV0ZXIsIHByb2dyZXNzLCBycCwgcnQsIHJ1YnksIHRpbWUge1xcblxcdGRpc3BsYXk6IGlubGluZTtcXG59XFxuXFxuLyogRGVwcmVjYXRlZCB0YWdzICovXFxuYWNyb255bSwgYXBwbGV0LCBiaWcsIGNlbnRlciwgZGlyLCBmb250LCBmcmFtZSwgZnJhbWVzZXQsIG5vZnJhbWVzLCBzLFxcbnN0cmlrZSwgdHQsIHUsIHhtcCB7XFxuXFx0ZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLyogUmVzZXQgc3R5bGVzIGZvciBhbGwgc3RydWN0dXJhbCB0YWdzICovXFxuYSwgYWJiciwgYXJlYSwgYXJ0aWNsZSwgYXNpZGUsIGF1ZGlvLCBiLCBiZG8sIGJsb2NrcXVvdGUsIGJvZHksIGJ1dHRvbiwgXFxuY2FudmFzLCBjYXB0aW9uLCBjaXRlLCBjb2RlLCBjb2wsIGNvbGdyb3VwLCBjb21tYW5kLCBkYXRhbGlzdCwgZGQsIGRlbCwgXFxuZGV0YWlscywgZGlhbG9nLCBkZm4sIGRpdiwgZGwsIGR0LCBlbSwgZW1iZWQsIGZpZWxkc2V0LCBmaWd1cmUsIGZvcm0sXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaGVhZCwgaGVhZGVyLCBoZ3JvdXAsIGhyLCBodG1sLCBpLCBpZnJhbWUsIGltZywgXFxuaW5wdXQsIGlucywga2V5Z2VuLCBrYmQsIGxhYmVsLCBsZWdlbmQsIGxpLCBtYXAsIG1hcmssIG1lbnUsIG1ldGVyLCBuYXYsXFxubm9zY3JpcHQsIG9iamVjdCwgb2wsIG9wdGdyb3VwLCBvcHRpb24sIG91dHB1dCwgcCwgcGFyYW0sIHByZSwgcHJvZ3Jlc3MsXFxucSwgcnAsIHJ0LCBydWJ5LCBzYW1wLCBzZWN0aW9uLCBzZWxlY3QsIHNtYWxsLCBzcGFuLCBzdHJvbmcsIHN1Yiwgc3VwLCBcXG50YWJsZSwgdGJvZHksIHRkLCB0ZXh0YXJlYSwgdGZvb3QsIHRoLCB0aGVhZCwgdGltZSwgdHIsIHVsLCB2YXIsIHZpZGVvIHtcXG5cXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG5cXHRib3JkZXI6IDA7XFxuXFx0Zm9udC1zaXplOiAxMDAlO1xcblxcdGZvbnQ6IGluaGVyaXQ7XFxuXFx0bWFyZ2luOiAwO1xcblxcdG91dGxpbmU6IG5vbmU7XFxuXFx0cGFkZGluZzogMDtcXG5cXHR0ZXh0LWFsaWduOiBsZWZ0O1xcblxcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxuXFx0ei1pbmRleDogMTtcXG59XFxuXFxuLyogTWlzY2VsbGFuZW91cyByZXNldHMgKi9cXG5ib2R5IHtcXG5cXHRsaW5lLWhlaWdodDogMTtcXG59XFxuXFxub2wsIHVsIHtcXG5cXHRsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5ibG9ja3F1b3RlLCBxIHtcXG5cXHRxdW90ZXM6IG5vbmU7XFxuXFxufVxcblxcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLCBxOmJlZm9yZSwgcTphZnRlciB7XFxuXFx0Y29udGVudDogJyc7XFxuXFx0Y29udGVudDogbm9uZTtcXG59XFxuXFxudGFibGUge1xcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///790\n')},16:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n    user-select: none;\n}\n\n:root {\n    --headerColorX: hsl(200, 100%, 50%);\n    --headerColorY: hsl(170, 100%, 50%);\n    --headerColorDeg: 10deg;\n    --sidebarBG: whitesmoke;\n    --sidebarC: #757575;\n    --transition: 0.25s ease-in-out;\n}\n\n.hide {\n    display: none;\n}\n\n/* header */\nheader {\n    display: flex;\n    background: linear-gradient(\n        var(--headerColorDeg),\n        var(--headerColorX),\n        var(--headerColorY)\n    );\n    justify-content: space-between;\n}\n\nheader div:nth-child(1),\n.burger {\n    display: flex;\n    padding: 20px 40px;\n}\n\n.burger:hover {\n    cursor: pointer;\n}\n\nheader p {\n    align-items: center;\n    font-size: 2rem;\n    color: white;\n}\n\nmain {\n    display: flex;\n}\n\n/* side menu */\n#sidebar-menu {\n    min-height: 100dvh;\n    width: 260px;\n    padding: 40px 20px;\n    transform: 0.25s;\n    background-color: var(--sidebarBG);\n}\n\n.menu-links div {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n.menu-links p {\n    font-weight: bold;\n    color: var(--sidebarC);\n}\n\n.menu-links {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n}\n\n.link-menu-link div {\n    border: 2px solid white;\n    background-color: white;\n    padding: 12px 16px;\n    border-radius: 8px;\n}\n\n.link-menu-link div:hover {\n    border: 2px solid var(--headerColorX);\n    transition: var(--transition);\n}\n\n.SVG-SIDEBAR-STROKE {\n    stroke: var(--sidebarC);\n}\n\n.SVG-SIDEBAR-FILL {\n    fill: var(--sidebarC);\n}\n\n/* span-40 */\n.span-40 {\n    padding: 40px;\n}\n\n/* projects */\n.nav-projects-title-top div:nth-child(1) {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.nav-projects-title-top {\n    display: flex;\n    flex-direction: column;\n    padding: 0px 20px 10px 20px;\n    border-bottom: 2px solid var(--sidebarC);\n}\n\n.nav-projects-title svg:hover {\n    cursor: pointer;\n}\n\n.nav-projects-title svg:hover {\n    cursor: pointer;\n}\n\n/* content */\n.content {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    padding: 20px 40px;\n}\n\n.title p {\n    text-align: center;\n    font-size: 2rem;\n}\n\n.list {\n    margin-top: 100px;\n}\n\n.list-head{\n    display: flex;\n    justify-content: space-between;\n}\n\n.addTaskSvg {\n    fill: black;\n}\n\n.addTaskSvg:hover {\n    cursor: pointer;\n}\n\n.list-head {\n    padding-bottom: 8px;\n    font-size: 2rem;\n    border-bottom: 4px solid black;\n}\n\n/* add tasks */\n.container-addTask {\n    padding: 20px;\n    font-size: 1.5rem;\n}\n\n.addTasks-wrap {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.addTasks {\n    display: flex;\n    justify-content: center;\n}\n\n.input-addTask1,\n.input-addTask2,\n.input-addTask3,\n.input-addTask4,\n.input-addTask-btn {\n    border: 4px solid black;\n    border-radius: 8px;\n    padding: 8px;\n}\n\n.input-addTask-btn:hover {\n    cursor: pointer;\n    background-color:  black;\n    color: white;\n    transition: var(--transition);\n}\n\n/* display */\n.container-tasks-info div {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n    justify-content: space-between;\n    padding: 20px;\n    font-size: 2rem;\n}\n\n.container-tasks-info div {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n.card-info {\n    display: flex;\n    justify-content: space-between;\n}\n\n/* add project */\n.addProjectInput-div {\n    padding-top: 12px;\n    display: flex;\n}\n\n.addProjectInput {\n    width: 174px;\n}\n\n.btn-addproject,\n.btn-addtask {\n    padding: 8px;   \n    border: 2px solid black;\n}\n\n.btn-addproject:hover,\n.btn-addtask:hover {\n    cursor: pointer;\n    background-color: black;\n    color: white;\n    transition: var(--transition);\n}\n\n/* project list */\n.projects-links-div {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    margin-top: 12px;\n}\n\n.card-list {\n    display: flex;\n    justify-content: flex-end;\n    border-radius: 20px;\n}\n\n.card-list div {\n    display: flex;\n    justify-content: flex-end;\n    font-size: 1.8rem;\n    flex: 1;\n}\n\n.card-list p,\n.card-list button {\n    padding: 4px 20px;\n    border-radius: 20px;\n}\n\n.card-list p:hover,\n.card-list button:hover {\n        cursor: pointer;\n    color: white;\n    background-color: black;\n    transition: var(--transition);\n}\n\n/* media query */\n\n@media only screen and (max-width: 1229px) {\n    .addTasks div {\n        flex-direction: column;\n    }\n}\n\n@media only screen and (max-width: 440px) {\n    .content {\n        padding: 4px 12px;\n    }\n    .container-addTask {\n        padding: 12px 4px;\n    }\n}`, "",{"version":3,"sources":["webpack://./src/css/style.css"],"names":[],"mappings":"AAAA;IACI,iBAAiB;AACrB;;AAEA;IACI,mCAAmC;IACnC,mCAAmC;IACnC,uBAAuB;IACvB,uBAAuB;IACvB,mBAAmB;IACnB,+BAA+B;AACnC;;AAEA;IACI,aAAa;AACjB;;AAEA,WAAW;AACX;IACI,aAAa;IACb;;;;KAIC;IACD,8BAA8B;AAClC;;AAEA;;IAEI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA,cAAc;AACd;IACI,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,qCAAqC;IACrC,6BAA6B;AACjC;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA,YAAY;AACZ;IACI,aAAa;AACjB;;AAEA,aAAa;AACb;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,wCAAwC;AAC5C;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,8BAA8B;AAClC;;AAEA,cAAc;AACd;IACI,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,SAAS;AACb;;AAEA;IACI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;;;;;IAKI,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,wBAAwB;IACxB,YAAY;IACZ,6BAA6B;AACjC;;AAEA,YAAY;AACZ;IACI,aAAa;IACb,eAAe;IACf,SAAS;IACT,8BAA8B;IAC9B,aAAa;IACb,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA,gBAAgB;AAChB;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;;IAEI,eAAe;IACf,uBAAuB;IACvB,YAAY;IACZ,6BAA6B;AACjC;;AAEA,iBAAiB;AACjB;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,iBAAiB;IACjB,OAAO;AACX;;AAEA;;IAEI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;;QAEQ,eAAe;IACnB,YAAY;IACZ,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA,gBAAgB;;AAEhB;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,iBAAiB;IACrB;IACA;QACI,iBAAiB;IACrB;AACJ","sourcesContent":["* {\\n    user-select: none;\\n}\\n\\n:root {\\n    --headerColorX: hsl(200, 100%, 50%);\\n    --headerColorY: hsl(170, 100%, 50%);\\n    --headerColorDeg: 10deg;\\n    --sidebarBG: whitesmoke;\\n    --sidebarC: #757575;\\n    --transition: 0.25s ease-in-out;\\n}\\n\\n.hide {\\n    display: none;\\n}\\n\\n/* header */\\nheader {\\n    display: flex;\\n    background: linear-gradient(\\n        var(--headerColorDeg),\\n        var(--headerColorX),\\n        var(--headerColorY)\\n    );\\n    justify-content: space-between;\\n}\\n\\nheader div:nth-child(1),\\n.burger {\\n    display: flex;\\n    padding: 20px 40px;\\n}\\n\\n.burger:hover {\\n    cursor: pointer;\\n}\\n\\nheader p {\\n    align-items: center;\\n    font-size: 2rem;\\n    color: white;\\n}\\n\\nmain {\\n    display: flex;\\n}\\n\\n/* side menu */\\n#sidebar-menu {\\n    min-height: 100dvh;\\n    width: 260px;\\n    padding: 40px 20px;\\n    transform: 0.25s;\\n    background-color: var(--sidebarBG);\\n}\\n\\n.menu-links div {\\n    display: flex;\\n    align-items: center;\\n    gap: 20px;\\n}\\n\\n.menu-links p {\\n    font-weight: bold;\\n    color: var(--sidebarC);\\n}\\n\\n.menu-links {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 12px;\\n}\\n\\n.link-menu-link div {\\n    border: 2px solid white;\\n    background-color: white;\\n    padding: 12px 16px;\\n    border-radius: 8px;\\n}\\n\\n.link-menu-link div:hover {\\n    border: 2px solid var(--headerColorX);\\n    transition: var(--transition);\\n}\\n\\n.SVG-SIDEBAR-STROKE {\\n    stroke: var(--sidebarC);\\n}\\n\\n.SVG-SIDEBAR-FILL {\\n    fill: var(--sidebarC);\\n}\\n\\n/* span-40 */\\n.span-40 {\\n    padding: 40px;\\n}\\n\\n/* projects */\\n.nav-projects-title-top div:nth-child(1) {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n\\n.nav-projects-title-top {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0px 20px 10px 20px;\\n    border-bottom: 2px solid var(--sidebarC);\\n}\\n\\n.nav-projects-title svg:hover {\\n    cursor: pointer;\\n}\\n\\n.nav-projects-title svg:hover {\\n    cursor: pointer;\\n}\\n\\n/* content */\\n.content {\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n    padding: 20px 40px;\\n}\\n\\n.title p {\\n    text-align: center;\\n    font-size: 2rem;\\n}\\n\\n.list {\\n    margin-top: 100px;\\n}\\n\\n.list-head{\\n    display: flex;\\n    justify-content: space-between;\\n}\\n\\n.addTaskSvg {\\n    fill: black;\\n}\\n\\n.addTaskSvg:hover {\\n    cursor: pointer;\\n}\\n\\n.list-head {\\n    padding-bottom: 8px;\\n    font-size: 2rem;\\n    border-bottom: 4px solid black;\\n}\\n\\n/* add tasks */\\n.container-addTask {\\n    padding: 20px;\\n    font-size: 1.5rem;\\n}\\n\\n.addTasks-wrap {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n}\\n\\n.addTasks {\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.input-addTask1,\\n.input-addTask2,\\n.input-addTask3,\\n.input-addTask4,\\n.input-addTask-btn {\\n    border: 4px solid black;\\n    border-radius: 8px;\\n    padding: 8px;\\n}\\n\\n.input-addTask-btn:hover {\\n    cursor: pointer;\\n    background-color:  black;\\n    color: white;\\n    transition: var(--transition);\\n}\\n\\n/* display */\\n.container-tasks-info div {\\n    display: flex;\\n    flex-wrap: wrap;\\n    gap: 20px;\\n    justify-content: space-between;\\n    padding: 20px;\\n    font-size: 2rem;\\n}\\n\\n.container-tasks-info div {\\n    display: flex;\\n    align-items: center;\\n    gap: 20px;\\n}\\n\\n.card-info {\\n    display: flex;\\n    justify-content: space-between;\\n}\\n\\n/* add project */\\n.addProjectInput-div {\\n    padding-top: 12px;\\n    display: flex;\\n}\\n\\n.addProjectInput {\\n    width: 174px;\\n}\\n\\n.btn-addproject,\\n.btn-addtask {\\n    padding: 8px;   \\n    border: 2px solid black;\\n}\\n\\n.btn-addproject:hover,\\n.btn-addtask:hover {\\n    cursor: pointer;\\n    background-color: black;\\n    color: white;\\n    transition: var(--transition);\\n}\\n\\n/* project list */\\n.projects-links-div {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 12px;\\n    margin-top: 12px;\\n}\\n\\n.card-list {\\n    display: flex;\\n    justify-content: flex-end;\\n    border-radius: 20px;\\n}\\n\\n.card-list div {\\n    display: flex;\\n    justify-content: flex-end;\\n    font-size: 1.8rem;\\n    flex: 1;\\n}\\n\\n.card-list p,\\n.card-list button {\\n    padding: 4px 20px;\\n    border-radius: 20px;\\n}\\n\\n.card-list p:hover,\\n.card-list button:hover {\\n        cursor: pointer;\\n    color: white;\\n    background-color: black;\\n    transition: var(--transition);\\n}\\n\\n/* media query */\\n\\n@media only screen and (max-width: 1229px) {\\n    .addTasks div {\\n        flex-direction: column;\\n    }\\n}\\n\\n@media only screen and (max-width: 440px) {\\n    .content {\\n        padding: 4px 12px;\\n    }\\n    .container-addTask {\\n        padding: 12px 4px;\\n    }\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')},314:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{"use strict";eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n')},675:module=>{eval('module.exports = function genid(len, prefix, keyspace) {\r\n  if (len == null) {\r\n    len = 32;\r\n  }\r\n  if (prefix == null) {\r\n    prefix = "";\r\n  }\r\n  if (keyspace == null) {\r\n    keyspace = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";\r\n  }\r\n  while (len-- > 0) {\r\n    prefix += keyspace.charAt(Math.floor(Math.random() * keyspace.length));\r\n  }\r\n  return prefix;\r\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc1LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2dlbmlkL2luZGV4LmpzP2RiYzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5pZChsZW4sIHByZWZpeCwga2V5c3BhY2UpIHtcclxuICBpZiAobGVuID09IG51bGwpIHtcclxuICAgIGxlbiA9IDMyO1xyXG4gIH1cclxuICBpZiAocHJlZml4ID09IG51bGwpIHtcclxuICAgIHByZWZpeCA9IFwiXCI7XHJcbiAgfVxyXG4gIGlmIChrZXlzcGFjZSA9PSBudWxsKSB7XHJcbiAgICBrZXlzcGFjZSA9IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODlcIjtcclxuICB9XHJcbiAgd2hpbGUgKGxlbi0tID4gMCkge1xyXG4gICAgcHJlZml4ICs9IGtleXNwYWNlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBrZXlzcGFjZS5sZW5ndGgpKTtcclxuICB9XHJcbiAgcmV0dXJuIHByZWZpeDtcclxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///675\n')},72:module=>{"use strict";eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},659:module=>{"use strict";eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n')},540:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},56:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n')},825:module=>{"use strict";eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///825\n')},113:module=>{"use strict";eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///113\n")},367:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/reset.css\nvar css_reset = __webpack_require__(790);\n;// ./src/css/reset.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, \"head\");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(css_reset/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src_css_reset = (css_reset/* default */.A && css_reset/* default */.A.locals ? css_reset/* default */.A.locals : undefined);\n\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/css/style.css\nvar style = __webpack_require__(16);\n;// ./src/css/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar style_options = {};\n\nstyle_options.styleTagTransform = (styleTagTransform_default());\nstyle_options.setAttributes = (setAttributesWithoutAttributes_default());\nstyle_options.insert = insertBySelector_default().bind(null, \"head\");\nstyle_options.domAPI = (styleDomAPI_default());\nstyle_options.insertStyleElement = (insertStyleElement_default());\n\nvar style_update = injectStylesIntoStyleTag_default()(style/* default */.A, style_options);\n\n\n\n\n       /* harmony default export */ const css_style = (style/* default */.A && style/* default */.A.locals ? style/* default */.A.locals : undefined);\n\n;// ./src/modules/storage.js\nlet storage = JSON.parse(localStorage.getItem('todolist')) || [\n    {\n        tasks: [\n            {\n                name: \"lorem 1\",\n                desc: \"ipsum 1\",\n                date: '2024-10-24',\n                prop: 'Not so important',\n                taskID: 'a13',\n                switch: 'off',\n            },\n            {\n                name: \"lorem 2\",\n                desc: \"ipsum 2\",\n                date: '2024-10-27',\n                prop: 'Important',\n                taskID: 'a23',\n                switch: 'on',\n            },\n            {\n                name: \"lorem 3\",\n                desc: \"ipsum 3\",\n                date: '2024-11-24',\n                prop: 'Very important',\n                taskID: 'a33',\n                switch: 'off',\n            },\n        ],\n        project: 'default project',\n        id: 'veMaaV8sBt2xP4KM',\n    },\n];\n\nconst saveToLocalStorage = () => {\n    localStorage.setItem('todolist', JSON.stringify(storage));\n};\n;// ./node_modules/date-fns/constants.js\n/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nconst constructFromSymbol = Symbol.for(\"constructDateFrom\");\n\n;// ./node_modules/date-fns/constructFrom.js\n\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nfunction constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructFrom = ((/* unused pure expression or super */ null && (constructFrom)));\n\n;// ./node_modules/date-fns/constructNow.js\n\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nfunction constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_constructNow = ((/* unused pure expression or super */ null && (constructNow)));\n\n;// ./node_modules/date-fns/_lib/normalizeDates.js\n\n\nfunction normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n\n;// ./node_modules/date-fns/toDate.js\n\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_toDate = ((/* unused pure expression or super */ null && (toDate)));\n\n;// ./node_modules/date-fns/startOfDay.js\n\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfDay = ((/* unused pure expression or super */ null && (startOfDay)));\n\n;// ./node_modules/date-fns/isSameDay.js\n\n\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nfunction isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isSameDay = ((/* unused pure expression or super */ null && (isSameDay)));\n\n;// ./node_modules/date-fns/isToday.js\n\n\n\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isToday = ((/* unused pure expression or super */ null && (isToday)));\n\n;// ./node_modules/date-fns/_lib/defaultOptions.js\nlet defaultOptions = {};\n\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n\n;// ./node_modules/date-fns/startOfWeek.js\n\n\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_startOfWeek = ((/* unused pure expression or super */ null && (startOfWeek)));\n\n;// ./node_modules/date-fns/isSameWeek.js\n\n\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    +startOfWeek(laterDate_, options) === +startOfWeek(earlierDate_, options)\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isSameWeek = ((/* unused pure expression or super */ null && (isSameWeek)));\n\n;// ./node_modules/date-fns/isThisWeek.js\n\n\n\n\n/**\n * The {@link isThisWeek} function options.\n */\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param date - The date to check\n * @param options - The object with options\n *\n * @returns The date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nfunction isThisWeek(date, options) {\n  return isSameWeek(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n    options,\n  );\n}\n\n// Fallback for modularized imports:\n/* harmony default export */ const date_fns_isThisWeek = ((/* unused pure expression or super */ null && (isThisWeek)));\n\n;// ./src/modules/logic.js\n\nlet idgen = __webpack_require__(675);\n\n\n\nconst create = (project, id) => {\n    const obj = {\n        tasks: [],\n        project: project,\n        id: id,\n    };\n    return obj;\n}\n\nconst ifToday = (date) => {\n    const sdate = new Date(date);\n    return isToday(sdate);\n};\n\nconst ifWeek = (date) => {\n    const sdate = new Date(date);\n    return isThisWeek(sdate, { weekStartsOn: 1 });\n};\n\nconst getID = (n) => idgen(n);\n\nconst addProject = (project) => {\n    let id = idgen(16);\n    const obj = create(project, id);\n    storage.push(obj);\n    saveToLocalStorage();\n    return id;\n};\n;// ./src/modules/dom.js\n\n\n\nconst dom = () => {\n    const body = document.querySelector('body');\n    body.addEventListener('click', function (e) {\n        const className = e.target.getAttribute('class');\n\n        // append project (done)\n        if (\n            className === 'nav-projects-svg' ||\n            className === 'SVG-SIDEBAR-FILL'\n        ) {\n            const nav = document.querySelector('.nav-projects-title-top');\n            const addProject = document.createElement('div');\n            if (nav.childElementCount === 1) {\n                addProject.innerHTML = `<div class=\"addProjectInput-div\">\n                                <div><input class=\"addProjectInput\" type=\"text\" placeholder=\"Project name\"></div>\n                                <div><button class=\"btn-addproject\">Submit</button></div>\n                            </div>`;\n                nav.append(addProject);\n            } else {\n                nav.lastElementChild.remove();\n            }\n        }\n\n        // append task (done)\n        else if (className === 'addTaskSvg') {\n            const title = document.querySelector('.title').firstElementChild.getAttribute(\"class\");\n            if (title !== null) {\n                const addTask = document.querySelector('.container-addTask');\n                const addTasks = document.createElement('div');\n                if (!addTask.childElementCount) {\n                    addTasks.innerHTML = `<div class=\"addTasks\">\n                            <div class=\"addTasks-wrap\">\n                                <input class=\"input-addTask1\" type=\"text\" placeholder=\"Title\" />\n                                <input class=\"input-addTask2\" type=\"text\" placeholder=\"Description\" />\n                                <input class=\"input-addTask3\" type=\"date\" />\n                                <select class=\"input-addTask4\" value=\"priority\">\n                                    <option value=\"Not so important\" name=\"important 1\">\n                                        Not so important\n                                    </option>\n                                    <option value=\"Important\" name=\"important 2\">\n                                        important\n                                    </option>\n                                    <option value=\"Very important\" name=\"important 3\">\n                                        Very important\n                                    </option>\n                                </select>\n                                <button class=\"input-addTask-btn\">Submit</button>\n                            </div>\n                        </div>`;\n                    addTask.append(addTasks);\n                } else {\n                    addTask.firstElementChild.remove();\n                }\n            }\n            else {\n                const ptitle = document.querySelector('.title').firstElementChild.textContent = \"Create/Open a project!\";\n            }\n        }\n\n        // filter\n        // show all\n        else if (className !== null && className.includes('showAll')) {\n            displayWithFilters('All');\n        }\n\n        // show today\n        else if (className !== null && className.includes('showToday')) {\n            displayWithFilters('Today');\n        }\n\n        // show week\n        else if (className !== null && className.includes('showWeek')) {\n            displayWithFilters('Week');\n        }\n\n        // show important\n        else if (className !== null && className.includes('showImportant')) {\n            displayWithFilters('Important');\n        }\n\n        // show completed\n        else if (className !== null && className.includes('showCompleted')) {\n            displayWithFilters('Completed');\n        }\n\n        // switch on/off\n        else if (className === 'sw') {\n            const title = document\n                .querySelector('.title p')\n                .getAttribute('class');\n            const taskid = e.target.parentElement.parentElement;\n\n            let index;\n            for (let i = 0; i < storage.length; ++i) {\n                if (storage[i].id === title) {\n                    index = i;\n                    break;\n                }\n            }\n            for (let i = 0; i < storage[index].tasks.length; ++i) {\n                if (\n                    storage[index].tasks[i].taskID ===\n                    taskid.getAttribute('class')\n                ) {\n                    if (storage[index].tasks[i].switch === 'off') {\n                        storage[index].tasks[i].switch = 'on';\n                    } else {\n                        storage[index].tasks[i].switch = 'off';\n                    }\n                    saveToLocalStorage();\n                    break;\n                }\n            }\n        }\n\n        // add task (todo)\n        else if (className === 'input-addTask-btn') {\n            const in1 = document.querySelector('.input-addTask1');\n            const in2 = document.querySelector('.input-addTask2');\n            const in3 = document.querySelector('.input-addTask3');\n            const in4 = document.querySelector('.input-addTask4');\n            if (\n                in1.value &&\n                in3.value &&\n                !in1.value.includes('<') &&\n                !in1.value.includes('>') &&\n                !in1.value.includes('/') &&\n                !in2.value.includes('<') &&\n                !in2.value.includes('>') &&\n                !in2.value.includes('/')\n            ) {\n                // STORAGE\n                const title = document\n                    .querySelector('.title p')\n                    .getAttribute('class');\n\n                let index;\n                for (let i = 0; i < storage.length; ++i) {\n                    if (storage[i].id === title) {\n                        index = i;\n                        break;\n                    }\n                }\n                const taskID = getID(3);\n                const obj = {\n                    name: in1.value,\n                    desc: in2.value,\n                    date: in3.value,\n                    prop: in4.value,\n                    taskID: taskID,\n                    switch: 'off',\n                };\n\n                storage[index].tasks.push(obj);\n                saveToLocalStorage();\n\n                // DOM\n                const container = document.querySelector(\n                    '.container-tasks-info'\n                );\n                const div = document.createElement('div');\n                const len = storage[index].tasks.length - 1;\n                div.classList.add(storage[index].tasks[len].taskID);\n                div.innerHTML = `<div>\n                                <input class=\"sw\" type=\"checkbox\" />\n                                <p>${storage[index].tasks[len].name}</p>\n                                <p>${storage[index].tasks[len].desc}</p>\n                                <p>${storage[index].tasks[len].prop}</p>\n                            </div>\n                            <div>\n                                <p>${storage[index].tasks[len].date}</p>\n                                <button class=\"btn-addtask\">del</button>\n                            </div>`;\n                container.append(div);\n\n                // Nr o' tasks\n                const taskslength = document.querySelector(\n                    '.list-head .nrOfList'\n                );\n                taskslength.textContent = storage[index].tasks.length;\n\n                in1.value = '';\n                in2.value = '';\n                in3.value = '';\n                in4.value = 'Not so important';\n            }\n        }\n\n        // remove task (done)\n        else if (className !== null && className === 'btn-addtask') {\n            const title = document\n                .querySelector('.title p')\n                .getAttribute('class');\n            const taskid = e.target.parentElement.parentElement;\n\n            let index;\n            for (let i = 0; i < storage.length; ++i) {\n                if (storage[i].id === title) {\n                    index = i;\n                    break;\n                }\n            }\n            for (let i = 0; i < storage[index].tasks.length; ++i) {\n                if (\n                    storage[index].tasks[i].taskID ===\n                    taskid.getAttribute('class')\n                ) {\n                    const container = document.querySelector(\n                        '.container-tasks-info'\n                    );\n                    container.removeChild(taskid);\n                    storage[index].tasks.splice(i, 1);\n                    saveToLocalStorage();\n                    break;\n                }\n            }\n            const taskslength = document.querySelector('.list-head .nrOfList');\n            taskslength.textContent = storage[index].tasks.length;\n        }\n\n        // add project (done)\n        else if (className === 'btn-addproject') {\n            const in1 = document.querySelector('.addProjectInput');\n            if (in1.value) {\n                // STORAGE\n                let id = addProject(in1.value);\n                // append to nav\n                const parent = document.querySelector('.projects-links-div');\n                const div = document.createElement('div');\n                div.innerHTML = `<div class=\"card-list\">\n                                <div><p class=\"card-list-p ${id}\">${in1.value}</p></div>\n                                <div><button class=\"delProject ${id}\">del</button></div>\n                        </div>`;\n                parent.append(div);\n                in1.value = '';\n                const projectCounts = document.querySelector('.projects-count');\n                projectCounts.textContent = storage.length;\n            }\n        }\n\n        // del project\n        else if (\n            className !== null &&\n            className.includes('delProject') === true\n        ) {\n            // get the id\n            const id = className.substr(11, 27);\n\n            for (let i = 0; i < storage.length; ++i) {\n                if (storage[i].id === id) {\n                    const container = document.querySelector(\n                        '.projects-links-div'\n                    );\n                    const card =\n                        e.target.parentElement.parentElement.parentElement;\n                    container.removeChild(card);\n                    storage.splice(i, 1);\n                    const projectCounts =\n                        document.querySelector('.projects-count');\n                    projectCounts.textContent = storage.length;\n                    if (!storage.length) {\n                        const title = document.querySelector('.title').firstElementChild;\n                        title.removeAttribute(\"class\");\n                        title.textContent = \"Create a project\";\n                        const nrolist = document.querySelector('.nrOfList');\n                        nrolist.textContent = \"\";\n                        const container = document.querySelector('.container-tasks-info');\n                        while (container.childElementCount) {\n                            container.firstElementChild.remove();\n                        }\n                        const cnt = document.querySelector('.container-addTask');\n                        while (cnt.childElementCount) {\n                            cnt.firstElementChild.remove();\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        // acces project card list (done)\n        else if (\n            className !== null &&\n            className.includes('card-list-p') === true\n        ) {\n            const id = className.substr(12, 17);\n            // get the project index\n            let index;\n            for (let i = 0; i < storage.length; ++i) {\n                if (storage[i].id === id) {\n                    index = i;\n                    break;\n                }\n            }\n\n            // addsvg\n            const listHead = document.querySelector('.list-head');\n            const addSVG = document.querySelector('.addTaskSvg');\n            if (addSVG === null) {\n                const div = document.createElement('div');\n                div.innerHTML = `<svg\n                            class=\"addTaskSvg\"\n                            width=\"32px\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n                            <g\n                                class=\"addTaskSvg\"\n                                id=\"SVGRepo_tracerCarrier\"\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                            ></g>\n                            <g id=\"SVGRepo_iconCarrier\">\n                                <path\n                                    class=\"addTaskSvg\"\n                                    class=\"SVG-SIDEBAR-FILL\"\n                                    d=\"M11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44771 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8Z\"\n                                ></path>\n                                <path\n                                    class=\"addTaskSvg\"\n                                    fill-rule=\"evenodd\"\n                                    clip-rule=\"evenodd\"\n                                    d=\"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM3.00683 12C3.00683 16.9668 7.03321 20.9932 12 20.9932C16.9668 20.9932 20.9932 16.9668 20.9932 12C20.9932 7.03321 16.9668 3.00683 12 3.00683C7.03321 3.00683 3.00683 7.03321 3.00683 12Z\"\n                                ></path>\n                            </g>\n                        </svg>`;\n                listHead.append(div);\n            }\n\n            const title = document.querySelector('.title p');\n            title.textContent = storage[index].project;\n            title.removeAttribute('class');\n            title.classList.add(id);\n            const taskslength = document.querySelector('.list-head .nrOfList');\n            taskslength.textContent = storage[index].tasks.length; // FIX HERE\n\n            const containerTasksInfo = document.querySelector(\n                '.container-tasks-info'\n            );\n            // remove before content\n            while (containerTasksInfo.childElementCount) {\n                containerTasksInfo.firstElementChild.remove();\n            }\n            // add tasks (***TESTING***NOT*REAL*PROJECT*CODE***)\n            // const taskID = getID(3);\n            // const obj = {\n            //     name: 1,\n            //     desc: 1,\n            //     date: 1,\n            //     prop: 1,\n            //     taskID: taskID,\n            // };\n\n            // storage[index].tasks.push(obj);\n            let nr = storage[index].tasks.length;\n            for (let i = 0; i < nr; ++i) {\n                if (storage[index].tasks[i].switch === 'on') {\n                    const div = document.createElement('div');\n                    div.classList.add(storage[index].tasks[i].taskID);\n                    div.innerHTML = `<div>\n                                    <input class=\"sw\" checked type=\"checkbox\" />\n                                    <p>${storage[index].tasks[i].name}</p>\n                                    <p>${storage[index].tasks[i].desc}</p>\n                                    <p>${storage[index].tasks[i].prop}</p>\n                                </div>\n                                <div>\n                                    <p>${storage[index].tasks[i].date}</p>\n                                    <button class=\"btn-addtask\">del</button>\n                                    </div>`;\n                    containerTasksInfo.append(div);\n                } else {\n                    const div = document.createElement('div');\n                    div.classList.add(storage[index].tasks[i].taskID);\n                    div.innerHTML = `<div>\n                                    <input class=\"sw\" type=\"checkbox\" />\n                                    <p>${storage[index].tasks[i].name}</p>\n                                    <p>${storage[index].tasks[i].desc}</p>\n                                    <p>${storage[index].tasks[i].prop}</p>\n                                </div>\n                                <div>\n                                    <p>${storage[index].tasks[i].date}</p>\n                                    <button class=\"btn-addtask\">del</button>\n                                </div>`;\n                    containerTasksInfo.append(div);\n                }\n            }\n        }\n    });\n\n    // funtctions\n    const displayWithFilters = (titleCnt) => {\n        const title = document.querySelector('.title').firstElementChild;\n        title.textContent = titleCnt;\n        title.removeAttribute(\"class\");\n        const listHead = document.querySelector('.list-head').lastElementChild;\n        const addSVG = document.querySelector('.addTaskSvg');\n        if (addSVG !== null) {\n            listHead.removeChild(addSVG);\n        }\n\n        // gods work\n        const containerAddTask = document.querySelector('.container-addTask');\n        while (containerAddTask.childElementCount) {\n            containerAddTask.firstElementChild.remove();\n        }\n\n        // gods work\n        const containerTasksInfo = document.querySelector(\n            '.container-tasks-info'\n        );\n        while (containerTasksInfo.childElementCount) {\n            containerTasksInfo.firstElementChild.remove();\n        }\n\n        const filterTasks = (i, j) => {\n            if (titleCnt === 'All') {\n                return 1;\n            } else if (titleCnt === 'Today') {\n                return ifToday(storage[i].tasks[j].date);\n            } else if (titleCnt === 'Week') {\n                return ifWeek(storage[i].tasks[j].date);\n            } else if (\n                titleCnt === 'Important' &&\n                (storage[i].tasks[j].prop === 'Important' ||\n                    storage[i].tasks[j].prop === 'Very important')\n            ) {\n                return 1;\n            } else if (\n                titleCnt === 'Completed' &&\n                storage[i].tasks[j].switch === 'on'\n            ) {\n                return 1;\n            }\n        };\n\n        let sum = 0;\n\n        for (let i = 0; i < storage.length; ++i) {\n            for (let j = 0; j < storage[i].tasks.length; ++j) {\n                if (filterTasks(i, j)) {\n                    if (storage[i].tasks[j].switch === 'on') {\n                        const div = document.createElement('div');\n                        div.classList.add(storage[i].tasks[j].taskID);\n                        div.innerHTML = `<div>\n                                    <p>${storage[i].tasks[j].name}</p>\n                                    <p>${storage[i].tasks[j].desc}</p>\n                                    <p>${storage[i].tasks[j].prop}</p>\n                                </div>\n                                <div>\n                                    <p>${storage[i].tasks[j].date}</p>\n                                    </div>`;\n                        containerTasksInfo.append(div);\n                    } else {\n                        const div = document.createElement('div');\n                        div.classList.add(storage[i].tasks[j].taskID);\n                        div.innerHTML = `<div>\n                                    <p>${storage[i].tasks[j].name}</p>\n                                    <p>${storage[i].tasks[j].desc}</p>\n                                    <p>${storage[i].tasks[j].prop}</p>\n                                </div>\n                                <div>\n                                    <p>${storage[i].tasks[j].date}</p>\n                                </div>`;\n                        containerTasksInfo.append(div);\n                    }\n                    sum++;\n                }\n            }\n        }\n        const nrolist = document.querySelector('.nrOfList');\n        nrolist.textContent = sum;\n    };\n\n    const loadProjectsFromLocalStorage = () => {\n        if (storage.length > 0) {\n            const parent = document.querySelector('.projects-links-div');\n            storage.forEach((project) => {\n                const div = document.createElement('div');\n                div.innerHTML = `<div class=\"card-list\">\n                                <div><p class=\"card-list-p ${project.id}\">${project.project}</p></div>\n                                <div><button class=\"delProject ${project.id}\">del</button></div>\n                        </div>`;\n                parent.append(div);\n            });\n            const projectCounts = document.querySelector('.projects-count');\n            projectCounts.textContent = storage.length;\n        }\n    };\n\n    loadProjectsFromLocalStorage();\n\n    // open && close sidebar\n    const burger = document.querySelector('.burger');\n    burger.addEventListener('click', function () {\n        const nav = document.querySelector('nav');\n        nav.classList.toggle('hide');\n    });\n};\n\n/* harmony default export */ const modules_dom = (dom);\n\n// TO DO\n// delete task dom && storage (done)\n// bug duplicates (done)\n// add custom task dom && storage (done)\n// save if it s done or not (done)\n// remove projects (done)\n// project count (done)\n// display all, today, week, important, completed tasks (done)\n// local storage (god bless)\n// default info (ez later)\n\n// if (no projects) (ez later)\n\n;// ./src/index.js\n// css\n\n\n// js\n\n\nmodules_dom();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///367\n")}},__webpack_module_cache__={};function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var n=__webpack_module_cache__[I]={id:I,exports:{}};return __webpack_modules__[I](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=I=>{var g=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(g,{a:g}),g},__webpack_require__.d=(I,g)=>{for(var n in g)__webpack_require__.o(g,n)&&!__webpack_require__.o(I,n)&&Object.defineProperty(I,n,{enumerable:!0,get:g[n]})},__webpack_require__.o=(I,g)=>Object.prototype.hasOwnProperty.call(I,g),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(367)})();